{"version":3,"sources":["utils/api.js","components/ImageCardModal/ImageCardModal.js","components/ImageTile/ImageTile.js","components/Grid/Grid.js","components/Gallery/Gallery.js","components/Header/Header.js","App.js","index.js"],"names":["api","ENDPOINT","POPULAR","getMostPopular","$","ajax","type","contentType","ImageCardModal","imgSrc","imgTitle","imgDescription","imgDate","active","onClose","classNames","push","className","join","src","alt","onClick","React","memo","ImageTile","id","url","title","shortDescription","longDescription","date","keywords","favorite","handleImageLike","useState","showCardModal","setShowCardModal","description","stringDate","toLocaleDateString","year","month","day","icon","fasHeart","farHeart","faExpand","Grid","props","state","columns","gridRef","createRef","onResize","bind","this","window","addEventListener","w","brakePoints","reduceRight","p","c","i","length","getColumns","current","offsetWidth","setState","col","numC","children","reduce","loading","ref","mapChildren","map","ci","child","Component","GRID_BREAKPOINTS","Gallery","imageList","setImageList","likedImages","setLikedImages","gridLoading","setGridLoading","imageId","imageIndex","indexOf","filter","item","handleApiResponse","response","setTimeout","collection","items","data","links","href","Date","useEffect","then","fail","error","console","log","image","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ae87d62.chunk.js","sourcesContent":["import $ from \"jquery\";\n\nconst API_KEY = \"4OeEnAEfBaQ39ZacuIi5dpTTbL9OIRsDYJFAzkm9\";\nconst API_GATEWAY_URL = `https://images-assets.nasa.gov`;\n\nconst api = {\n  ENDPOINT: {\n    POPULAR: `${API_GATEWAY_URL}/popular.json?api_key=${API_KEY}`,\n  },\n\n  getMostPopular: () => {\n    return $.ajax(api.ENDPOINT.POPULAR, {\n      type: \"GET\",\n      contentType: \"application/json; charset=UTF-8\",\n    });\n  },\n};\n\nexport default api;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ImageCardModal = ({\n  imgSrc,\n  imgTitle,\n  imgDescription,\n  imgDate,\n  active,\n  onClose,\n}) => {\n  const classNames = [\"image-card-modal__popup\"];\n  if (active) classNames.push(\"image-card-modal__popup--active\");\n\n  return (\n    <div className={classNames.join(\" \")}>\n      <div className=\"image-card-modal__popup-inner\">\n        <div className=\"image-card-modal__popup__photo\">\n          <img src={imgSrc} alt=\"\" />\n        </div>\n        <div className=\"image-card-modal__popup__text\">\n          <h1>{imgTitle}</h1>\n          <p>{imgDescription}</p>\n          <p>{imgDate}</p>\n        </div>\n        <button className=\"image-card-modal__popup__close\" onClick={onClose}>\n          X\n        </button>\n      </div>\n    </div>\n  );\n};\n\nImageCardModal.propTypes = {\n  imgSrc: PropTypes.string,\n  imgTitle: PropTypes.string,\n  imgDescription: PropTypes.string,\n  imgDate: PropTypes.string,\n  active: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default React.memo(ImageCardModal);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  faHeart as fasHeart,\n  faExpand,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ImageCardModal from \"../ImageCardModal/ImageCardModal\";\n\nconst ImageTile = ({\n  id,\n  url,\n  title,\n  shortDescription,\n  longDescription,\n  date,\n  keywords,\n  favorite,\n  handleImageLike,\n}) => {\n  const [showCardModal, setShowCardModal] = useState(false);\n  const description =\n    (keywords && keywords.join(\", \")) || shortDescription || longDescription;\n  const stringDate = date.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n\n  const onCardClose = () => {\n    setShowCardModal(false);\n  };\n\n  return (\n    <div className=\"tile\">\n      <img className=\"tile__img\" src={url} alt={title} />\n      <div className=\"tile__content\">\n        <FontAwesomeIcon\n          className=\"favorite-icon\"\n          icon={favorite ? fasHeart : farHeart}\n          onClick={() => handleImageLike(id)}\n        />\n        <FontAwesomeIcon\n          className=\"expand-icon\"\n          icon={faExpand}\n          onClick={() => setShowCardModal(true)}\n        />\n        <h2 className=\"tile__title\">{title}</h2>\n        <p className=\"tile__description\">\n          {description}\n          <br />\n          Date: {stringDate}\n        </p>\n        <button\n          className=\"tile__like-btn\"\n          onClick={() => setShowCardModal(true)}\n        >\n          Read More\n        </button>\n      </div>\n      <ImageCardModal\n        imgTitle={title}\n        imgDescription={longDescription}\n        imgDate={stringDate}\n        imgSrc={url}\n        active={showCardModal}\n        onClose={onCardClose}\n      />\n    </div>\n  );\n};\n\nImageTile.propTypes = {\n  id: PropTypes.string,\n  url: PropTypes.string,\n  title: PropTypes.string,\n  shortDescription: PropTypes.string,\n  longDescription: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  favorite: PropTypes.bool,\n  handleImageLike: PropTypes.func,\n};\n\nexport default React.memo(ImageTile);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { columns: 1 };\n    this.gridRef = React.createRef();\n    this.onResize = this.onResize.bind(this);\n  }\n  componentDidMount() {\n    this.onResize();\n    window.addEventListener(\"resize\", this.onResize);\n  }\n\n  getColumns(w) {\n    return (\n      this.props.brakePoints.reduceRight((p, c, i) => {\n        return c < w ? p : i;\n      }, this.props.brakePoints.length) + 1\n    );\n  }\n\n  onResize() {\n    const columns = this.getColumns(this.gridRef.current.offsetWidth);\n    if (columns !== this.state.columns) {\n      this.setState({ columns: columns });\n    }\n  }\n\n  mapChildren() {\n    let col = [];\n    const numC = this.state.columns;\n    for (let i = 0; i < numC; i++) {\n      col.push([]);\n    }\n    return this.props.children.reduce((p, c, i) => {\n      p[i % numC].push(c);\n      return p;\n    }, col);\n  }\n\n  render() {\n    const classNames = [\"grid\"];\n    if (this.props.loading) classNames.push(\"grid--loading\");\n\n    return (\n      <div className={classNames.join(\" \")} ref={this.gridRef}>\n        {this.mapChildren().map((col, ci) => {\n          return (\n            <div className=\"column\" key={ci}>\n              {col.map((child, i) => {\n                return child;\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nGrid.propTypes = {\n  brakePoints: PropTypes.arrayOf(PropTypes.number),\n  loading: PropTypes.bool,\n};\n\nexport default React.memo(Grid);\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../../utils/api\";\nimport ImageTile from \"../ImageTile/ImageTile\";\nimport Grid from \"../Grid/Grid\";\n\nconst GRID_BREAKPOINTS = [350, 500, 750];\n\nconst Gallery = () => {\n  const [imageList, setImageList] = useState([]);\n  const [likedImages, setLikedImages] = useState([]);\n  const [gridLoading, setGridLoading] = useState(true);\n\n  const handleImageLike = (imageId) => {\n    const imageIndex = likedImages.indexOf(imageId);\n    setLikedImages(\n      imageIndex === -1\n        ? [...likedImages, imageId]\n        : likedImages.filter((item) => item !== imageId)\n    );\n  };\n\n  const getFormattedImageData = (apiImageData) => {\n    return apiImageData.collection.items\n      .filter(\n        (item) =>\n          item.data[0][\"media_type\"] === \"image\" &&\n          item.data[0][\"nasa_id\"] !== \"PIA21519\"\n      )\n      .map((item) => ({\n        id: item.data[0][\"nasa_id\"],\n        url: item.links[0].href,\n        title: item.data[0].title,\n        shortDescription: item.data[0][\"description_508\"],\n        longDescription: item.data[0].description,\n        date: new Date(item.data[0][\"date_created\"]),\n        keywords: item.data[0].keywords,\n      }));\n  };\n\n  const handleApiResponse = (response) => {\n    setTimeout(() => {\n      setImageList(getFormattedImageData(response));\n      setGridLoading(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    setGridLoading(true);\n    api\n      .getMostPopular()\n      .then((response) => handleApiResponse(response))\n      .fail((error) => {\n        console.log(\"Error retrieving image list\", error);\n      });\n  }, []);\n\n  return (\n    <div className=\"gallery\">\n      <h1>\n        <label className=\"label\">Liked pictures: </label>\n        <label className=\"liked-images-count\">{likedImages.length}</label>\n      </h1>\n      <Grid brakePoints={GRID_BREAKPOINTS} loading={gridLoading}>\n        {imageList.map((image) => (\n          <ImageTile\n            id={image.id}\n            key={image.id}\n            url={image.url}\n            shortDescription={image.shortDescription}\n            longDescription={image.longDescription}\n            title={image.title}\n            date={image.date}\n            keywords={image.keywords}\n            favorite={likedImages.indexOf(image.id) !== -1}\n            handleImageLike={handleImageLike}\n          />\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header id=\"header\">\n      <div className=\"inner\">\n        <h1 className=\"app-title\">NASA Image Gallery</h1>\n        <p className=\"header-description\">\n          Image gallery created with NASA's Image and Video Library API\n        </p>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Gallery from \"./components/Gallery/Gallery\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Gallery />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}